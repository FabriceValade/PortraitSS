<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PortraitEditor"
                    xmlns:vw="clr-namespace:PortraitEditor.View"
                    xmlns:vm="clr-namespace:PortraitEditor.ViewModel"
                    xmlns:m="clr-namespace:PortraitEditor.Model"
                    >
    <!--<local:MultiValueConverter x:Key="MultiValueConverter" />-->
    
    <DataTemplate x:Key="FactionFileImageTemplate">
        <Grid>
            <Image Source="{Binding LogoPath}" Height="30"/>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="PortraitTemplate">
        <StackPanel Orientation="Vertical" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="70" Height="70">
            <Image Source="{Binding ImageUrl.FullUrl}" Height="60"/>
        </StackPanel>
    </DataTemplate >

    <DataTemplate x:Key="PortraitGroupTemplate">
        <TextBlock FontWeight="Bold" FontSize="14" Text="{Binding Name}"/>
    </DataTemplate>

    <Style x:Key="PortraitListviewStyle" TargetType="ListView">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ItemTemplate" Value="{StaticResource PortraitTemplate}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
    </Style>


    <Style x:Key="PortraitListItemStyle" TargetType="ListViewItem">
        <Setter Property="Opacity" Value="0.5" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ImageUrl.IsRelative}" Value="True">
                <Setter Property="Background" Value="Blue" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ImageUrl.IsRelative}" Value="false">
                <Setter Property="Background" Value="Yellow" />
            </DataTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Trigger.Setters>
                    <Setter Property="Opacity" Value="1.0" />
                    <Setter Property="BorderBrush" Value="Red" />
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TextElement" TargetType="TextBlock">
        <Setter Property="Margin" Value="5,5,3,3"/>
    </Style>

    <!--application wide styleing yes-->
    <SolidColorBrush x:Key="TextBrush" Color="Azure" />
    <Color x:Key="GeneralBackgroundColor">black</Color>
    <SolidColorBrush x:Key="GeneralBackgroundBrush" Color="{StaticResource GeneralBackgroundColor}" />
    <SolidColorBrush x:Key="PaleBackgroundBrush" Color="DarkSlateGray" />
    <SolidColorBrush x:Key="BadBackgroundBrush" Color="DarkRed" />
    <SolidColorBrush x:Key="GoodBackgroundBrush" Color="DarkGreen" />
    <Color x:Key="UIOutlineColor" >DarkCyan</Color>
    <SolidColorBrush x:Key="ButtonSolid" Color="DarkCyan" />
    <SolidColorBrush x:Key="UiOutline" Color="{StaticResource UIOutlineColor}" />
    <SolidColorBrush x:Key="UiFill" Color="CadetBlue" />
    <SolidColorBrush x:Key="UiHighContrast" Color="Azure" />
    <Color x:Key="UiLowContrastColor">DarkSlateGray</Color>
    <SolidColorBrush x:Key="UiLowContrast" Color="{StaticResource UiLowContrastColor}" />
    <SolidColorBrush x:Key="GlyphFill" Color="DarkSlateGray" />
    <SolidColorBrush x:Key="ButtonPale" Color="DarkTurquoise" />
    <SolidColorBrush x:Key="ContrastOnButton" Color="DarkSlateGray" />

    <LinearGradientBrush x:Key="ButtonBrush"
                     EndPoint="1,1"
                     StartPoint="0,0">
        <GradientStop Color="{StaticResource UiLowContrastColor}"
                Offset="0" />
        <GradientStop Color="{StaticResource UIOutlineColor}"
                Offset="0.5" />
    </LinearGradientBrush>


    <!--style for all generic panel-->
    <!--<Style TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource GeneralBackgroundBrush}"/>
    </Style>-->
    <Style TargetType="TreeView">
        <Setter Property="Background" Value="{StaticResource GeneralBackgroundBrush}"/>
    </Style>
    <Style x:Key="ElementBorder" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource GeneralBackgroundBrush}"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonSolid}"/>
        <Setter Property="Margin" Value="3,3,3,3"/>
    </Style>
    <Style TargetType="ListView">
        <Setter Property="Background" Value="{StaticResource GeneralBackgroundBrush}"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="true"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <Style  x:Key="PortraitListView" TargetType="ListView">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ItemTemplate" >
            <Setter.Value>
                <DataTemplate >
                    <vw:SSPortraitSmallView DataContext="{TemplateBinding Content}"/>
                </DataTemplate >
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
    </Style>
    
    <Style  TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local" Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFAAAAAA" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <TabPanel x:Name="HeaderPanel"
                                  Grid.Column="0"
                                  Grid.Row="1"
                                  Panel.ZIndex="1"
                                  Margin="0,0,-4,-1"
                                  IsItemsHost="True"
                                  KeyboardNavigation.TabIndex="1"
                                  Background="Transparent" />
                        <Border x:Name="Border"
                                Grid.Column="1"
                                Grid.RowSpan="2"
                                BorderThickness="0"
                                CornerRadius="30,30,30,30"
                                Padding="10"
                                KeyboardNavigation.TabNavigation="Local"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                Background="{StaticResource UiLowContrast}">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource UIOutlineColor}"/>
                            </Border.BorderBrush>
                            <ContentPresenter x:Name="PART_SelectedContentHost" Margin="4" ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource UiLowContrastColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)"
                                                                          Storyboard.TargetName="Border">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="1,1,1,0" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderLightColor}"/>
                                        </ColorAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
                                Margin="0,0,-4,0"
                                BorderThickness="1,1,1,1"
                                CornerRadius="12,0,0,12"
                                Background="Transparent">
                            
                            <Border Background="{StaticResource ButtonSolid}" CornerRadius="5" Margin="12,12,12,12"> 
                                <ContentPresenter x:Name="ContentSite"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  ContentSource="Header"
                                                  Margin="5,2,5,2"
                                                  RecognizesAccessKey="True" />
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--style for all generic text-->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
    </Style>
    
    <!--style for all generic controls-->
    <Style x:Key="ToggleButton" TargetType="ToggleButton">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{TemplateBinding Width}"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"></RowDefinition>
                        </Grid.RowDefinitions>
                        <TextBlock Name="Text" Panel.ZIndex="2" FontFamily="Segoe Ui Dark" HorizontalAlignment="Center"  VerticalAlignment="Center"  Foreground="{StaticResource TextBrush}" Text="{TemplateBinding Content}" FontSize="12" FontWeight="SemiBold" Margin="5,5,5,5" />
                        <BulletDecorator Panel.ZIndex="1" Grid.Column="0" Grid.Row="0"  Background="{StaticResource ButtonSolid}" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" Background="GhostWhite" BorderBrush="Gainsboro" BorderThickness="1" Width="{Binding ElementName=Text, Path=Width}" >
                                    <Grid Margin="2,2,2,2" >
                                        <Rectangle  Fill="{StaticResource ButtonSolid}" StrokeThickness="0" Stroke="Black" Stretch="UniformToFill" />
                                        <Rectangle x:Name="CheckMark" Margin="1" Fill="{StaticResource ButtonPale}" HorizontalAlignment="Stretch" />
                                    </Grid>
                                </Border>
                            </BulletDecorator.Bullet>
                        </BulletDecorator>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Text" Property="Foreground" Value="{StaticResource TextBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="LightGray" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonSolid}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToggleButtonBadGood" TargetType="ToggleButton">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{TemplateBinding Width}"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"></RowDefinition>
                        </Grid.RowDefinitions>
                        <TextBlock Name="Text" Panel.ZIndex="2" FontFamily="Segoe Ui Dark" HorizontalAlignment="Center"  VerticalAlignment="Center"  Foreground="{StaticResource TextBrush}" Text="{TemplateBinding Content}" FontSize="12" FontWeight="SemiBold" Margin="5,5,5,5" />
                        <BulletDecorator Panel.ZIndex="1" Grid.Column="0" Grid.Row="0"  Background="{StaticResource BadBackgroundBrush}" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" Background="GhostWhite" BorderBrush="Gainsboro" BorderThickness="1" >
                                    <Grid Margin="2,2,2,2" >
                                        <Rectangle  Fill="{StaticResource BadBackgroundBrush}" StrokeThickness="0" Stroke="Black" Stretch="UniformToFill" />
                                        <Rectangle x:Name="CheckMark" Margin="1" Fill="{StaticResource GoodBackgroundBrush}" HorizontalAlignment="Stretch" />
                                    </Grid>
                                </Border>
                            </BulletDecorator.Bullet>
                        </BulletDecorator>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Text" Property="Foreground" Value="{StaticResource TextBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="LightGray" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BadBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TextBox">
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Background" Value="{StaticResource GeneralBackgroundBrush}"/>
    </Style>
    <Style TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ButtonSolid}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="{StaticResource UiHighContrast}" BorderThickness="0" Background="{StaticResource ButtonSolid}">
                            <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      TextElement.FontWeight="DemiBold"
                                      Margin="10,3,10,3">
                            </ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonPale}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#3C7FB1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#2C628B"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButton"
                 TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <!--<Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0" Value="Yellow" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>-->
                    </VisualState>
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled">
                        <!--<Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                          Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                          Storyboard.TargetName="Arrow">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                          Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderDarkColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>-->
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <!--<Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                          Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>-->
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource UiOutline}" Background="{StaticResource PaleBackgroundBrush}" >
                <!--<Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                        <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0" />
                        <GradientStop Color="{DynamicResource BorderDarkColor}"  Offset="1" />
                    </LinearGradientBrush>
                </Border.BorderBrush>
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="{DynamicResource ControlLightColor}" />
                                <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Border.Background>-->
            </Border>
            <Border Grid.Column="0" CornerRadius="2,0,0,2" Margin="1">
                <!--<Border.Background>
                    <SolidColorBrush Color="{DynamicResource ControlLightColor}"/>
                </Border.Background>-->
            </Border>

            <Path x:Name="Arrow" Grid.Column="1"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Data="M 0 0 L 4 4 L 8 0 Z" 
                                 Fill="{StaticResource UiHighContrast}">
                <!--<Path.Fill>
                    <SolidColorBrush Color="{StaticResource GlyphFill}"/>
                </Path.Fill>-->
            </Path>

        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="NewComboBox"
       TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <!--<Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox"
                                                                      Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>-->
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="ContentSite">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}"
                                                            Grid.Column="2"
                                                            Focusable="false"
                                                            ClickMode="Press"
                                                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False"
                                                               Content="{TemplateBinding SelectionBoxItem}"
                                                               ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                               ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                               Margin="3,3,23,3"
                                                               VerticalAlignment="Stretch"
                                                               HorizontalAlignment="Left">
                        </ContentPresenter>
                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}"
                                                               Template="{StaticResource ComboBoxTextBox}"
                                                               HorizontalAlignment="Left"
                                                               VerticalAlignment="Bottom"
                                                               Margin="3,3,23,3"
                                                               Focusable="True"
                                                               Background="Transparent"
                                                               Visibility="Hidden"
                                                               IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup x:Name="Popup" Placement="Bottom"
                                              IsOpen="{TemplateBinding IsDropDownOpen}"
                                              AllowsTransparency="True"
                                              Focusable="False"
                                              PopupAnimation="Slide">
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True"
                                                    MinWidth="{TemplateBinding ActualWidth}"
                                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" BorderThickness="1" BorderBrush="{StaticResource UiOutline}">
                                    <!--<Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                    </Border.Background>-->
                                </Border>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels"   Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border" 
                                            SnapsToDevicePixels="true"
                                            Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="DarkSlateGray" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="DarkSlateGray" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="SteelBlue" Storyboard.TargetName="BorderMouse" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="Transparent" Storyboard.TargetName="BorderMouse" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BorderMouse" Background="Transparent" Padding="2">
                            <ContentPresenter />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    

    <!-- 
  This template applies the view to instanc eof the viewmodel
  -->
    <DataTemplate DataType="{x:Type vm:URLViewModel}">
        <vw:URLView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:EditableURLViewModel}">
        <vw:EditableURLView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:ModFactionViewModel}">
        <vw:SSModViewDetailed />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:SSFactionGroupViewModel}">
        <vw:SSFactionGroupView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:FactionDirectoryViewModel}">
        <vw:SSFactionDirectoryView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:AllPortraitsViewModel}">
        <vw:SSPortraitCollectionView/>
    </DataTemplate>

    <!--<DataTemplate DataType="{x:Type m:SSPortrait}">
        <vw:SSPortraitView/>
    </DataTemplate>-->
</ResourceDictionary>