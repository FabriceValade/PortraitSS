<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PortraitEditor"
                    xmlns:vw="clr-namespace:PortraitEditor.View"
                    xmlns:vm="clr-namespace:PortraitEditor.ViewModel"
                    xmlns:m="clr-namespace:PortraitEditor.Model"
                    >
    <!--<local:MultiValueConverter x:Key="MultiValueConverter" />-->
    <DataTemplate x:Key="FactionFileImageTemplate">
        <Grid>
            <Image Source="{Binding LogoPath}" Height="30"/>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="PortraitTemplate">
        <StackPanel Orientation="Vertical" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="70" Height="70">
            <Image Source="{Binding ImageUrl.FullUrl}" Height="60"/>
        </StackPanel>
    </DataTemplate >

    <DataTemplate x:Key="PortraitGroupTemplate">
        <TextBlock FontWeight="Bold" FontSize="14" Text="{Binding Name}"/>
    </DataTemplate>

    <Style x:Key="PortraitListviewStyle" TargetType="ListView">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ItemTemplate" Value="{StaticResource PortraitTemplate}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
    </Style>


    <Style x:Key="PortraitListItemStyle" TargetType="ListViewItem">
        <Setter Property="Opacity" Value="0.5" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ImageUrl.IsRelative}" Value="True">
                <Setter Property="Background" Value="Blue" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ImageUrl.IsRelative}" Value="false">
                <Setter Property="Background" Value="Yellow" />
            </DataTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Trigger.Setters>
                    <Setter Property="Opacity" Value="1.0" />
                    <Setter Property="BorderBrush" Value="Red" />
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TextElement" TargetType="TextBlock">
        <Setter Property="Margin" Value="5,5,3,3"/>
    </Style>

    <!--application wide styleing yes-->
    <SolidColorBrush x:Key="TextBrush" Color="Azure" />
    <SolidColorBrush x:Key="GeneralBackgroundBrush" Color="Black" />
    <SolidColorBrush x:Key="BadBackgroundBrush" Color="DarkRed" />
    <SolidColorBrush x:Key="GoodBackgroundBrush" Color="DarkGreen" />
    <SolidColorBrush x:Key="ButtonSolid" Color="DarkCyan" />
    <SolidColorBrush x:Key="ButtonPale" Color="DarkTurquoise" />
    <SolidColorBrush x:Key="ContrastOnButton" Color="DarkSlateGray" />
    
    <!--style for all generic panel-->
    <Style TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource GeneralBackgroundBrush}"/>
    </Style>
    <Style TargetType="TreeView">
        <Setter Property="Background" Value="{StaticResource GeneralBackgroundBrush}"/>
    </Style>
    <Style x:Key="ElementBorder" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource GeneralBackgroundBrush}"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonSolid}"/>
        <Setter Property="Margin" Value="3,3,3,3"/>
    </Style>
    <Style TargetType="ListView">
        <Setter Property="Background" Value="{StaticResource GeneralBackgroundBrush}"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="true"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <Style  x:Key="ElementBorder" TargetType="ListView">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ItemTemplate" >
            <Setter.Value>
                <DataTemplate >
                    <StackPanel Orientation="Vertical" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="70" Height="70">
                        <Image Source="{Binding Url.FullUrl}" Height="60"/>
                    </StackPanel>
                </DataTemplate >
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>

    </Style>
    <!--style for all generic text-->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
    </Style>
    
    <!--style for all generic controls-->
    <Style x:Key="ToggleButton" TargetType="ToggleButton">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{TemplateBinding Width}"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"></RowDefinition>
                        </Grid.RowDefinitions>
                        <TextBlock Name="Text" Panel.ZIndex="2" FontFamily="Segoe Ui Dark" HorizontalAlignment="Center"  VerticalAlignment="Center"  Foreground="{StaticResource TextBrush}" Text="{TemplateBinding Content}" FontSize="12" FontWeight="SemiBold" Margin="5,5,5,5" />
                        <BulletDecorator Panel.ZIndex="1" Grid.Column="0" Grid.Row="0"  Background="{StaticResource ButtonSolid}" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" Background="GhostWhite" BorderBrush="Gainsboro" BorderThickness="1" Width="{Binding ElementName=Text, Path=Width}" >
                                    <Grid Margin="2,2,2,2" >
                                        <Rectangle  Fill="{StaticResource ButtonSolid}" StrokeThickness="0" Stroke="Black" Stretch="UniformToFill" />
                                        <Rectangle x:Name="CheckMark" Margin="1" Fill="{StaticResource ButtonPale}" HorizontalAlignment="Stretch" />
                                    </Grid>
                                </Border>
                            </BulletDecorator.Bullet>
                        </BulletDecorator>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Text" Property="Foreground" Value="{StaticResource TextBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="LightGray" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonSolid}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToggleButtonBadGood" TargetType="ToggleButton">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{TemplateBinding Width}"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"></RowDefinition>
                        </Grid.RowDefinitions>
                        <TextBlock Name="Text" Panel.ZIndex="2" FontFamily="Segoe Ui Dark" HorizontalAlignment="Center"  VerticalAlignment="Center"  Foreground="{StaticResource TextBrush}" Text="{TemplateBinding Content}" FontSize="12" FontWeight="SemiBold" Margin="5,5,5,5" />
                        <BulletDecorator Panel.ZIndex="1" Grid.Column="0" Grid.Row="0"  Background="{StaticResource BadBackgroundBrush}" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" Background="GhostWhite" BorderBrush="Gainsboro" BorderThickness="1" >
                                    <Grid Margin="2,2,2,2" >
                                        <Rectangle  Fill="{StaticResource BadBackgroundBrush}" StrokeThickness="0" Stroke="Black" Stretch="UniformToFill" />
                                        <Rectangle x:Name="CheckMark" Margin="1" Fill="{StaticResource GoodBackgroundBrush}" HorizontalAlignment="Stretch" />
                                    </Grid>
                                </Border>
                            </BulletDecorator.Bullet>
                        </BulletDecorator>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Text" Property="Foreground" Value="{StaticResource TextBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="LightGray" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BadBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TextBox">
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Background" Value="{StaticResource GeneralBackgroundBrush}"/>
    </Style>
    <Style TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ButtonSolid}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="#707070" BorderThickness="0" Background="{StaticResource ButtonSolid}">
                            <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      TextElement.FontWeight="DemiBold"
                                      Margin="10,3,10,3">
                            </ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonPale}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#3C7FB1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#2C628B"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- 
  This template applies the view to instanc eof the viewmodel
  -->
    <DataTemplate DataType="{x:Type vm:URLViewModel}">
        <vw:URLView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:EditableURLViewModel}">
        <vw:EditableURLView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:ModFactionViewModel}">
        <vw:SSModViewDetailed />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:SSFactionGroupViewModel}">
        <vw:SSFactionGroupView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:FactionDirectoryViewModel}">
        <vw:SSFactionDirectoryView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:AllPortraitsViewModel}">
        <vw:SSPortraitCollectionView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type m:SSPortrait}">
        <vw:SSPortraitView/>
    </DataTemplate>
</ResourceDictionary>